<?xml version="1.0"?>
<!--
  ~ @package   AkeebaEngage
  ~ @copyright Copyright (c)2020-2020 Nicholas K. Dionysopoulos / Akeeba Ltd
  ~ @license   GNU General Public License version 3, or later
  -->

<!--
	Akeeba Engage build file for Phing
	written by Nicholas K. Dionysopoulos

	Run "phing git" from the build directory to build everything except the docs
-->
<project name="AkeebaEngage" description="Akeeba Engage" default="git">
    <import file="${phing.dir}/../../buildfiles/phing/common.xml"/>

    <!--
    ====================================================================================================
    File sets
    ====================================================================================================
    -->

    <fileset dir="${dirs.component}" id="component">
        <include name="backend/**"/>
        <include name="frontend/**"/>
        <include name="language/**"/>
        <include name="media/**"/>
        <include name="*"/>

        <!-- Debug scripts -->
        <exclude name="debug/**"/>

        <!-- License file. Included in the package extensions's root -->
        <exclude name="LICENSE.txt"/>

        <!-- Package extension script -->
        <exclude name="script.engage.php"/>

        <!-- XML Manifest in backend folder. This is included in the component package's root -->
        <exclude name="backend/engage.xml"/>

        <!-- SCSS compilation cache -->
        <exclude name="component/media/css/.sass-cache/**"/>

        <!-- HTML Purifier: Remove unneeded tests, optional code, irrelevant plugins etc -->
        <exclude name="backend/vendor/ezyang/htmlpurifier/extras/**"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/maintenance/**"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/plugins/**"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/tests/**"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/CREDITS*"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/INSTALL*"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/NEWS*"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/package.php"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/phpdoc.ini"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/test-*"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/TODO"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/update-for-release"/>
        <exclude name="backend/vendor/ezyang/htmlpurifier/WHATSNEW"/>
    </fileset>

    <fileset dir="${dirs.release}" id="package">
        <include name="com_*.zip"/>
        <include name="file_*.zip"/>
        <include name="file_fef*.zip"/>
        <include name="mod_*.zip"/>
        <include name="plg_*.zip"/>
        <include name="lib_*.zip"/>
        <include name="pkg_*.xml"/>
        <include name="*.txt"/>
        <include name="script.*.php"/>
    </fileset>

    <fileset dir="${dirs.component}/cli" id="cli">
        <include name="*.php"/>
        <include name="file_engage.xml"/>
    </fileset>

    <!--
    ====================================================================================================
    Tasks - Documentation
    ====================================================================================================
    -->

    <target name="documentation" description="The documentation">
    </target>

    <!--
    ====================================================================================================
    Tasks - Project management
    ====================================================================================================
    -->

    <target name="release">
        <!-- Make sure there is a tag that's the same as the version number -->
        <gittag gitPath="${git.binary}"
                repository="${dirs.root}"
                list="true" pattern="${version}"
                outputProperty="git.tags"
        />

        <php function="trim" returnProperty="git.tags">
            <param value="${git.tags}" />
        </php>

        <if>
            <not>
                <equals arg1="${git.tags}" arg2="${version}" />
            </not>
            <then>
                <fail message="You must tag version ${version} before trying to release it." />
            </then>
        </if>

        <!-- Verify the tag. If it can't verify the tag the build fails. -->
        <gittag gitPath="${git.binary}"
                repository="${dirs.root}"
                verify="true"
                object="${version}"
                outputProperty="git.verify"
        />

        <!-- Make a draft release -->
        <loadfile property="github.release.body" file="${dirs.root}/RELEASENOTES.md" />

        <GitHubRelease token="${github.token}" organization="${github.organization}" repository="${github.repository}"
                       tagName="${version}" releaseName="v.${version}" releaseBody="${github.release.body}" draft="1"
                       propName="github.release.id" />

        <!-- Upload the release files -->
        <GitHubAsset token="${github.token}" organization="${github.organization}" repository="${github.repository}"
                     file="${dirs.release}/pkg_engage-${version}.zip"
                     releaseId="${github.release.id}" />

        <!-- Publish the release -->
        <GitHubRelease token="${github.token}" organization="${github.organization}" repository="${github.repository}"
                       tagName="${version}" draft="0" />
    </target>

    <!--
	====================================================================================================
	Obsolete
	====================================================================================================
	-->

    <target name="docsdeploy">
        <echo message="The docsdeploy target is obsolete. The documentation is now in the wiki" />
    </target>

    <target name="documentation" description="The documentation">
        <echo message="The documentation target is obsolete. The documentation is now in the wiki" />
    </target>
</project>
